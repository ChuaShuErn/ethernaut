{
	"id": "0e6d644699b52c05f8df05c835177d40",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/KingMaker.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"contracts/King.sol\";\ncontract KingMaker {\n\n    King king;\n\n    constructor(address payable _king){\n        king = King(_king);\n    }\n\n    receive() external payable{\n         revert(\"Dont send me ether!\");\n\n    }\n\n    fallback() external payable {\n        revert(\"Dont send me ether!\");\n    }\n\n    function sendEtherToContract() payable public {\n\n        (bool success,) = address(king).call{value:msg.value}(\"\");\n        require(success,\"Transfer failed\");\n       \n    }\n\n\n}"
			},
			"contracts/King.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract King {\n\n  address king;\n  uint public prize;\n  address public owner;\n\n  constructor() payable {\n    owner = msg.sender;  \n    king = msg.sender;\n    prize = msg.value;\n  }\n\n  receive() external payable {\n    require(msg.value >= prize || msg.sender == owner);\n    payable(king).transfer(msg.value);\n    king = msg.sender;\n    prize = msg.value;\n  }\n\n  function _king() public view returns (address) {\n    return king;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/King.sol": {
				"King": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "_king",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "prize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/King.sol\":57:489  contract King {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/King.sol\":174:184  msg.sender */\n  caller\n    /* \"contracts/King.sol\":166:171  owner */\n  0x02\n  0x00\n    /* \"contracts/King.sol\":166:184  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/King.sol\":199:209  msg.sender */\n  caller\n    /* \"contracts/King.sol\":192:196  king */\n  0x00\n  dup1\n    /* \"contracts/King.sol\":192:209  king = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/King.sol\":223:232  msg.value */\n  callvalue\n    /* \"contracts/King.sol\":215:220  prize */\n  0x01\n    /* \"contracts/King.sol\":215:232  prize = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/King.sol\":57:489  contract King {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/King.sol\":57:489  contract King {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x29cc6d6f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe3ac5d26\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/King.sol\":295:300  prize */\n      sload(0x01)\n        /* \"contracts/King.sol\":282:291  msg.value */\n      callvalue\n        /* \"contracts/King.sol\":282:300  msg.value >= prize */\n      lt\n      iszero\n        /* \"contracts/King.sol\":282:323  msg.value >= prize || msg.sender == owner */\n      dup1\n      tag_8\n      jumpi\n      pop\n        /* \"contracts/King.sol\":318:323  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/King.sol\":304:323  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/King.sol\":304:314  msg.sender */\n      caller\n        /* \"contracts/King.sol\":304:323  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/King.sol\":282:323  msg.value >= prize || msg.sender == owner */\n    tag_8:\n        /* \"contracts/King.sol\":274:324  require(msg.value >= prize || msg.sender == owner) */\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n        /* \"contracts/King.sol\":338:342  king */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/King.sol\":330:352  payable(king).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/King.sol\":330:363  payable(king).transfer(msg.value) */\n      0x08fc\n        /* \"contracts/King.sol\":353:362  msg.value */\n      callvalue\n        /* \"contracts/King.sol\":330:363  payable(king).transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_11:\n      pop\n        /* \"contracts/King.sol\":376:386  msg.sender */\n      caller\n        /* \"contracts/King.sol\":369:373  king */\n      0x00\n      dup1\n        /* \"contracts/King.sol\":369:386  king = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/King.sol\":400:409  msg.value */\n      callvalue\n        /* \"contracts/King.sol\":392:397  prize */\n      0x01\n        /* \"contracts/King.sol\":392:409  prize = msg.value */\n      dup2\n      swap1\n      sstore\n      stop\n        /* \"contracts/King.sol\":57:489  contract King {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/King.sol\":418:487  function _king() public view returns (address) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/King.sol\":113:133  address public owner */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/King.sol\":92:109  uint public prize */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/King.sol\":418:487  function _king() public view returns (address) {... */\n    tag_14:\n        /* \"contracts/King.sol\":456:463  address */\n      0x00\n        /* \"contracts/King.sol\":478:482  king */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/King.sol\":471:482  return king */\n      swap1\n      pop\n        /* \"contracts/King.sol\":418:487  function _king() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/King.sol\":113:133  address public owner */\n    tag_19:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/King.sol\":92:109  uint public prize */\n    tag_23:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_27:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_28:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_35\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_27\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_29:\n        /* \"#utility.yul\":328:352   */\n      tag_37\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_28\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_16:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_39\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_29\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_30:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_31:\n        /* \"#utility.yul\":763:787   */\n      tag_42\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_30\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_25:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_44\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_31\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205508ea0d454c979dee88d1420b840963f087b3c04baa74ae49023dd9c00258e464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405233600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506102f48061009b6000396000f3fe6080604052600436106100385760003560e01c806329cc6d6f146101585780638da5cb5b14610183578063e3ac5d26146101ae57610153565b36610153576001543410158061009b5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6100a457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561010a573d6000803e3d6000fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055005b600080fd5b34801561016457600080fd5b5061016d6101d9565b60405161017a919061026f565b60405180910390f35b34801561018f57600080fd5b50610198610202565b6040516101a5919061026f565b60405180910390f35b3480156101ba57600080fd5b506101c3610228565b6040516101d091906102a3565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102598261022e565b9050919050565b6102698161024e565b82525050565b60006020820190506102846000830184610260565b92915050565b6000819050919050565b61029d8161028a565b82525050565b60006020820190506102b86000830184610294565b9291505056fea26469706673582212205508ea0d454c979dee88d1420b840963f087b3c04baa74ae49023dd9c00258e464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x2F4 DUP1 PUSH2 0x9B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29CC6D6F EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x1AE JUMPI PUSH2 0x153 JUMP JUMPDEST CALLDATASIZE PUSH2 0x153 JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO DUP1 PUSH2 0x9B JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259 DUP3 PUSH2 0x22E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x269 DUP2 PUSH2 0x24E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x284 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x260 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D DUP2 PUSH2 0x28A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE ADDMOD 0xEA 0xD GASLIMIT 0x4C SWAP8 SWAP14 0xEE DUP9 0xD1 TIMESTAMP SIGNEXTEND DUP5 MULMOD PUSH4 0xF087B3C0 0x4B 0xAA PUSH21 0xAE49023DD9C00258E464736F6C6343000812003300 ",
							"sourceMap": "57:432:0:-:0;;;174:10;166:5;;:18;;;;;;;;;;;;;;;;;;199:10;192:4;;:17;;;;;;;;;;;;;;;;;;223:9;215:5;:17;;;;57:432;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_61": {
									"entryPoint": null,
									"id": 61,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_king_69": {
									"entryPoint": 473,
									"id": 69,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_7": {
									"entryPoint": 514,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@prize_5": {
									"entryPoint": 552,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1025:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:2",
														"type": ""
													}
												],
												"src": "139:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:2",
														"type": ""
													}
												],
												"src": "241:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:2",
														"type": ""
													}
												],
												"src": "365:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "659:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "630:7:2",
														"type": ""
													}
												],
												"src": "593:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:2",
														"type": ""
													}
												],
												"src": "676:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:2",
														"type": ""
													}
												],
												"src": "800:222:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c806329cc6d6f146101585780638da5cb5b14610183578063e3ac5d26146101ae57610153565b36610153576001543410158061009b5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6100a457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561010a573d6000803e3d6000fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055005b600080fd5b34801561016457600080fd5b5061016d6101d9565b60405161017a919061026f565b60405180910390f35b34801561018f57600080fd5b50610198610202565b6040516101a5919061026f565b60405180910390f35b3480156101ba57600080fd5b506101c3610228565b6040516101d091906102a3565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102598261022e565b9050919050565b6102698161024e565b82525050565b60006020820190506102846000830184610260565b92915050565b6000819050919050565b61029d8161028a565b82525050565b60006020820190506102b86000830184610294565b9291505056fea26469706673582212205508ea0d454c979dee88d1420b840963f087b3c04baa74ae49023dd9c00258e464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29CC6D6F EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x1AE JUMPI PUSH2 0x153 JUMP JUMPDEST CALLDATASIZE PUSH2 0x153 JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO DUP1 PUSH2 0x9B JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259 DUP3 PUSH2 0x22E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x269 DUP2 PUSH2 0x24E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x284 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x260 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D DUP2 PUSH2 0x28A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE ADDMOD 0xEA 0xD GASLIMIT 0x4C SWAP8 SWAP14 0xEE DUP9 0xD1 TIMESTAMP SIGNEXTEND DUP5 MULMOD PUSH4 0xF087B3C0 0x4B 0xAA PUSH21 0xAE49023DD9C00258E464736F6C6343000812003300 ",
							"sourceMap": "57:432:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;295:5;;282:9;:18;;:41;;;;318:5;;;;;;;;;;;304:19;;:10;:19;;;282:41;274:50;;;;;;338:4;;;;;;;;;;330:22;;:33;353:9;330:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;376:10;369:4;;:17;;;;;;;;;;;;;;;;;;400:9;392:5;:17;;;;57:432;;;;418:69;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;113:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;92:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;418:69;456:7;478:4;;;;;;;;;;;471:11;;418:69;:::o;113:20::-;;;;;;;;;;;;;:::o;92:17::-;;;;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "151200",
								"executionCost": "70817",
								"totalCost": "222017"
							},
							"external": {
								"_king()": "2500",
								"owner()": "2514",
								"prize()": "2451"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 489,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 174,
									"end": 184,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 166,
									"end": 171,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 166,
									"end": 171,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 184,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 166,
									"end": 184,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 166,
									"end": 184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 166,
									"end": 184,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 166,
									"end": 184,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 166,
									"end": 184,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 166,
									"end": 184,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 166,
									"end": 184,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 166,
									"end": 184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 184,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 166,
									"end": 184,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 166,
									"end": 184,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 166,
									"end": 184,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 166,
									"end": 184,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 166,
									"end": 184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 166,
									"end": 184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 199,
									"end": 209,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 192,
									"end": 196,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 196,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 192,
									"end": 209,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 192,
									"end": 209,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 192,
									"end": 209,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 209,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 223,
									"end": 232,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 215,
									"end": 220,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 232,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 215,
									"end": 232,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 215,
									"end": 232,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 215,
									"end": 232,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 489,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 489,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 489,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 489,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 489,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205508ea0d454c979dee88d1420b840963f087b3c04baa74ae49023dd9c00258e464736f6c63430008120033",
									".code": [
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "29CC6D6F"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "E3AC5D26"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 295,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 282,
											"end": 291,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 282,
											"end": 300,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 282,
											"end": 300,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 282,
											"end": 323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 282,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 282,
											"end": 323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 282,
											"end": 323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 318,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 318,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 318,
											"end": 323,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 318,
											"end": 323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 318,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 318,
											"end": 323,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 318,
											"end": 323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 318,
											"end": 323,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 318,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 318,
											"end": 323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 304,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 304,
											"end": 323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 304,
											"end": 314,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 304,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 304,
											"end": 323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 304,
											"end": 323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 282,
											"end": 323,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 282,
											"end": 323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 274,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 274,
											"end": 324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 274,
											"end": 324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 274,
											"end": 324,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 274,
											"end": 324,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 274,
											"end": 324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 338,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 342,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 338,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 338,
											"end": 342,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 338,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 342,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 338,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 338,
											"end": 342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 330,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 330,
											"end": 352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 353,
											"end": 362,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 330,
											"end": 363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 363,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 330,
											"end": 363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 330,
											"end": 363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 376,
											"end": 386,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 369,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 369,
											"end": 386,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 369,
											"end": 386,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 369,
											"end": 386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 369,
											"end": 386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 400,
											"end": 409,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 392,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 392,
											"end": 409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 392,
											"end": 409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 392,
											"end": 409,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 392,
											"end": 409,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 489,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 418,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 418,
											"end": 487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 418,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 418,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 418,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 418,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 418,
											"end": 487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 418,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 418,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 113,
											"end": 133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 113,
											"end": 133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 92,
											"end": 109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 92,
											"end": 109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 92,
											"end": 109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 92,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 92,
											"end": 109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 92,
											"end": 109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 92,
											"end": 109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 92,
											"end": 109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 92,
											"end": 109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 92,
											"end": 109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 92,
											"end": 109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 418,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 456,
											"end": 463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 478,
											"end": 482,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 482,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 478,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 478,
											"end": 482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 471,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 92,
											"end": 109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 92,
											"end": 109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/King.sol",
								"contracts/KingMaker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_king()": "29cc6d6f",
							"owner()": "8da5cb5b",
							"prize()": "e3ac5d26"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_king\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/King.sol\":\"King\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/King.sol\":{\"keccak256\":\"0x733af9f1c17a4855f071c2e939b577cc0b7f98203a47a79f3a13ec424f77b157\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://661909698876362278ea37d10d75a49dcce4323915093e4526ddf04816bed0b4\",\"dweb:/ipfs/QmNQx7RVXjVttDXRgtLjeZfQyM9VY9qWnpdnf6BvG2buCq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/King.sol:King",
								"label": "king",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/King.sol:King",
								"label": "prize",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/King.sol:King",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/KingMaker.sol": {
				"KingMaker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_king",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "sendEtherToContract",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/KingMaker.sol\":85:539  contract KingMaker {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/KingMaker.sol\":127:196  constructor(address payable _king){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/KingMaker.sol\":183:188  _king */\n  dup1\n    /* \"contracts/KingMaker.sol\":171:175  king */\n  0x00\n  dup1\n    /* \"contracts/KingMaker.sol\":171:189  king = King(_king) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/KingMaker.sol\":127:196  constructor(address payable _king){... */\n  pop\n    /* \"contracts/KingMaker.sol\":85:539  contract KingMaker {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:570   */\ntag_11:\n    /* \"#utility.yul\":511:518   */\n  0x00\n    /* \"#utility.yul\":540:564   */\n  tag_20\n    /* \"#utility.yul\":558:563   */\n  dup3\n    /* \"#utility.yul\":540:564   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":529:564   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:570   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":576:714   */\ntag_12:\n    /* \"#utility.yul\":657:689   */\n  tag_22\n    /* \"#utility.yul\":683:688   */\n  dup2\n    /* \"#utility.yul\":657:689   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":650:655   */\n  dup2\n    /* \"#utility.yul\":647:690   */\n  eq\n    /* \"#utility.yul\":637:708   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":704:705   */\n  0x00\n    /* \"#utility.yul\":701:702   */\n  dup1\n    /* \"#utility.yul\":694:706   */\n  revert\n    /* \"#utility.yul\":637:708   */\ntag_23:\n    /* \"#utility.yul\":576:714   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":720:879   */\ntag_13:\n    /* \"#utility.yul\":785:790   */\n  0x00\n    /* \"#utility.yul\":816:822   */\n  dup2\n    /* \"#utility.yul\":810:823   */\n  mload\n    /* \"#utility.yul\":801:823   */\n  swap1\n  pop\n    /* \"#utility.yul\":832:873   */\n  tag_25\n    /* \"#utility.yul\":867:872   */\n  dup2\n    /* \"#utility.yul\":832:873   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":720:879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":885:1252   */\ntag_3:\n    /* \"#utility.yul\":963:969   */\n  0x00\n    /* \"#utility.yul\":1012:1014   */\n  0x20\n    /* \"#utility.yul\":1000:1009   */\n  dup3\n    /* \"#utility.yul\":991:998   */\n  dup5\n    /* \"#utility.yul\":987:1010   */\n  sub\n    /* \"#utility.yul\":983:1015   */\n  slt\n    /* \"#utility.yul\":980:1099   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1018:1097   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":980:1099   */\ntag_27:\n    /* \"#utility.yul\":1138:1139   */\n  0x00\n    /* \"#utility.yul\":1163:1235   */\n  tag_29\n    /* \"#utility.yul\":1227:1234   */\n  dup5\n    /* \"#utility.yul\":1218:1224   */\n  dup3\n    /* \"#utility.yul\":1207:1216   */\n  dup6\n    /* \"#utility.yul\":1203:1225   */\n  add\n    /* \"#utility.yul\":1163:1235   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1153:1235   */\n  swap2\n  pop\n    /* \"#utility.yul\":1109:1245   */\n  pop\n    /* \"#utility.yul\":885:1252   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/KingMaker.sol\":85:539  contract KingMaker {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/KingMaker.sol\":85:539  contract KingMaker {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x325ec768\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/KingMaker.sol\":239:268  revert(\"Dont send me ether!\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_6\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KingMaker.sol\":85:539  contract KingMaker {... */\n    tag_2:\n        /* \"contracts/KingMaker.sol\":320:349  revert(\"Dont send me ether!\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_10\n      swap1\n      tag_7\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KingMaker.sol\":362:535  function sendEtherToContract() payable public {... */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n    tag_12:\n        /* \"contracts/KingMaker.sol\":420:432  bool success */\n      0x00\n        /* \"contracts/KingMaker.sol\":445:449  king */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KingMaker.sol\":437:455  address(king).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KingMaker.sol\":462:471  msg.value */\n      callvalue\n        /* \"contracts/KingMaker.sol\":437:476  address(king).call{value:msg.value}(\"\") */\n      mload(0x40)\n      tag_14\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_18\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_17)\n    tag_18:\n      0x60\n      swap2\n      pop\n    tag_17:\n      pop\n        /* \"contracts/KingMaker.sol\":419:476  (bool success,) = address(king).call{value:msg.value}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/KingMaker.sol\":494:501  success */\n      dup1\n        /* \"contracts/KingMaker.sol\":486:520  require(success,\"Transfer failed\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/KingMaker.sol\":408:535  {... */\n      pop\n        /* \"contracts/KingMaker.sol\":362:535  function sendEtherToContract() payable public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_22:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:351   */\n    tag_23:\n        /* \"#utility.yul\":322:343   */\n      0x446f6e742073656e64206d652065746865722100000000000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:344   */\n      mstore\n        /* \"#utility.yul\":182:351   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":357:723   */\n    tag_24:\n        /* \"#utility.yul\":499:502   */\n      0x00\n        /* \"#utility.yul\":520:587   */\n      tag_34\n        /* \"#utility.yul\":584:586   */\n      0x13\n        /* \"#utility.yul\":579:582   */\n      dup4\n        /* \"#utility.yul\":520:587   */\n      tag_22\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":513:587   */\n      swap2\n      pop\n        /* \"#utility.yul\":596:689   */\n      tag_35\n        /* \"#utility.yul\":685:688   */\n      dup3\n        /* \"#utility.yul\":596:689   */\n      tag_23\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":714:716   */\n      0x20\n        /* \"#utility.yul\":709:712   */\n      dup3\n        /* \"#utility.yul\":705:717   */\n      add\n        /* \"#utility.yul\":698:717   */\n      swap1\n      pop\n        /* \"#utility.yul\":357:723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":729:1148   */\n    tag_7:\n        /* \"#utility.yul\":895:899   */\n      0x00\n        /* \"#utility.yul\":933:935   */\n      0x20\n        /* \"#utility.yul\":922:931   */\n      dup3\n        /* \"#utility.yul\":918:936   */\n      add\n        /* \"#utility.yul\":910:936   */\n      swap1\n      pop\n        /* \"#utility.yul\":982:991   */\n      dup2\n        /* \"#utility.yul\":976:980   */\n      dup2\n        /* \"#utility.yul\":972:992   */\n      sub\n        /* \"#utility.yul\":968:969   */\n      0x00\n        /* \"#utility.yul\":957:966   */\n      dup4\n        /* \"#utility.yul\":953:970   */\n      add\n        /* \"#utility.yul\":946:993   */\n      mstore\n        /* \"#utility.yul\":1010:1141   */\n      tag_37\n        /* \"#utility.yul\":1136:1140   */\n      dup2\n        /* \"#utility.yul\":1010:1141   */\n      tag_24\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1002:1141   */\n      swap1\n      pop\n        /* \"#utility.yul\":729:1148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1154:1301   */\n    tag_25:\n        /* \"#utility.yul\":1255:1266   */\n      0x00\n        /* \"#utility.yul\":1292:1295   */\n      dup2\n        /* \"#utility.yul\":1277:1295   */\n      swap1\n      pop\n        /* \"#utility.yul\":1154:1301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1307:1421   */\n    tag_26:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1427:1825   */\n    tag_27:\n        /* \"#utility.yul\":1586:1589   */\n      0x00\n        /* \"#utility.yul\":1607:1690   */\n      tag_41\n        /* \"#utility.yul\":1688:1689   */\n      0x00\n        /* \"#utility.yul\":1683:1686   */\n      dup4\n        /* \"#utility.yul\":1607:1690   */\n      tag_25\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1600:1690   */\n      swap2\n      pop\n        /* \"#utility.yul\":1699:1792   */\n      tag_42\n        /* \"#utility.yul\":1788:1791   */\n      dup3\n        /* \"#utility.yul\":1699:1792   */\n      tag_26\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1817:1818   */\n      0x00\n        /* \"#utility.yul\":1812:1815   */\n      dup3\n        /* \"#utility.yul\":1808:1819   */\n      add\n        /* \"#utility.yul\":1801:1819   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1831:2210   */\n    tag_15:\n        /* \"#utility.yul\":2015:2018   */\n      0x00\n        /* \"#utility.yul\":2037:2184   */\n      tag_44\n        /* \"#utility.yul\":2180:2183   */\n      dup3\n        /* \"#utility.yul\":2037:2184   */\n      tag_27\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":2030:2184   */\n      swap2\n      pop\n        /* \"#utility.yul\":2201:2204   */\n      dup2\n        /* \"#utility.yul\":2194:2204   */\n      swap1\n      pop\n        /* \"#utility.yul\":1831:2210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2216:2381   */\n    tag_28:\n        /* \"#utility.yul\":2356:2373   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":2352:2353   */\n      0x00\n        /* \"#utility.yul\":2344:2350   */\n      dup3\n        /* \"#utility.yul\":2340:2354   */\n      add\n        /* \"#utility.yul\":2333:2374   */\n      mstore\n        /* \"#utility.yul\":2216:2381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2387:2753   */\n    tag_29:\n        /* \"#utility.yul\":2529:2532   */\n      0x00\n        /* \"#utility.yul\":2550:2617   */\n      tag_47\n        /* \"#utility.yul\":2614:2616   */\n      0x0f\n        /* \"#utility.yul\":2609:2612   */\n      dup4\n        /* \"#utility.yul\":2550:2617   */\n      tag_22\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":2543:2617   */\n      swap2\n      pop\n        /* \"#utility.yul\":2626:2719   */\n      tag_48\n        /* \"#utility.yul\":2715:2718   */\n      dup3\n        /* \"#utility.yul\":2626:2719   */\n      tag_28\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":2744:2746   */\n      0x20\n        /* \"#utility.yul\":2739:2742   */\n      dup3\n        /* \"#utility.yul\":2735:2747   */\n      add\n        /* \"#utility.yul\":2728:2747   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2759:3178   */\n    tag_21:\n        /* \"#utility.yul\":2925:2929   */\n      0x00\n        /* \"#utility.yul\":2963:2965   */\n      0x20\n        /* \"#utility.yul\":2952:2961   */\n      dup3\n        /* \"#utility.yul\":2948:2966   */\n      add\n        /* \"#utility.yul\":2940:2966   */\n      swap1\n      pop\n        /* \"#utility.yul\":3012:3021   */\n      dup2\n        /* \"#utility.yul\":3006:3010   */\n      dup2\n        /* \"#utility.yul\":3002:3022   */\n      sub\n        /* \"#utility.yul\":2998:2999   */\n      0x00\n        /* \"#utility.yul\":2987:2996   */\n      dup4\n        /* \"#utility.yul\":2983:3000   */\n      add\n        /* \"#utility.yul\":2976:3023   */\n      mstore\n        /* \"#utility.yul\":3040:3171   */\n      tag_50\n        /* \"#utility.yul\":3166:3170   */\n      dup2\n        /* \"#utility.yul\":3040:3171   */\n      tag_29\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":3032:3171   */\n      swap1\n      pop\n        /* \"#utility.yul\":2759:3178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122096a2a5dff648ee0e30805b9c17d940aba962b2ba9a8c49d713c2ad03d85c54e364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_88": {
									"entryPoint": null,
									"id": 88,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable_fromMemory": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1255:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "519:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "529:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "558:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "540:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "529:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "501:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "511:7:2",
														"type": ""
													}
												],
												"src": "466:104:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:87:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "692:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "701:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "704:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "694:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "694:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "694:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "650:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "683:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "657:25:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "657:32:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "647:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "647:43:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:51:2"
															},
															"nodeType": "YulIf",
															"src": "637:71:2"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:2",
														"type": ""
													}
												],
												"src": "576:138:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "791:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "801:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "816:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "810:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "801:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "867:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "832:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "832:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "832:41:2"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "769:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "777:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "785:5:2",
														"type": ""
													}
												],
												"src": "720:159:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "970:282:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1016:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1018:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1018:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1018:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "991:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1000:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "987:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1012:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "983:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "983:32:2"
															},
															"nodeType": "YulIf",
															"src": "980:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1109:136:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1124:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1138:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1128:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1153:82:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1207:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1218:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1203:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1203:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1227:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1163:39:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1163:72:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1153:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "940:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "951:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "963:6:2",
														"type": ""
													}
												],
												"src": "885:367:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516103f33803806103f3833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b6102dc806101176000396000f3fe6080604052600436106100225760003560e01c8063325ec7681461009d57610062565b36610062576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610059906101d4565b60405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610094906101d4565b60405180910390fd5b6100a56100a7565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16346040516100ee90610225565b60006040518083038185875af1925050503d806000811461012b576040519150601f19603f3d011682016040523d82523d6000602084013e610130565b606091505b5050905080610174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016b90610286565b60405180910390fd5b50565b600082825260208201905092915050565b7f446f6e742073656e64206d652065746865722100000000000000000000000000600082015250565b60006101be601383610177565b91506101c982610188565b602082019050919050565b600060208201905081810360008301526101ed816101b1565b9050919050565b600081905092915050565b50565b600061020f6000836101f4565b915061021a826101ff565b600082019050919050565b600061023082610202565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610270600f83610177565b915061027b8261023a565b602082019050919050565b6000602082019050818103600083015261029f81610263565b905091905056fea264697066735822122096a2a5dff648ee0e30805b9c17d940aba962b2ba9a8c49d713c2ad03d85c54e364736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3F3 CODESIZE SUB DUP1 PUSH2 0x3F3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP3 PUSH2 0x7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x9D JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD5 DUP2 PUSH2 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DC DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x325EC768 EQ PUSH2 0x9D JUMPI PUSH2 0x62 JUMP JUMPDEST CALLDATASIZE PUSH2 0x62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59 SWAP1 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94 SWAP1 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA5 PUSH2 0xA7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xEE SWAP1 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x130 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP1 PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x446F6E742073656E64206D652065746865722100000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE PUSH1 0x13 DUP4 PUSH2 0x177 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9 DUP3 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED DUP2 PUSH2 0x1B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F PUSH1 0x0 DUP4 PUSH2 0x1F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A DUP3 PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x230 DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270 PUSH1 0xF DUP4 PUSH2 0x177 JUMP JUMPDEST SWAP2 POP PUSH2 0x27B DUP3 PUSH2 0x23A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29F DUP2 PUSH2 0x263 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 LOG2 0xA5 0xDF 0xF6 BASEFEE 0xEE 0xE ADDRESS DUP1 JUMPDEST SWAP13 OR 0xD9 BLOCKHASH 0xAB 0xA9 PUSH3 0xB2BA9A DUP13 0x49 0xD7 SGT 0xC2 0xAD SUB 0xD8 0x5C SLOAD 0xE3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "85:454:1:-:0;;;127:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;183:5;171:4;;:18;;;;;;;;;;;;;;;;;;127:69;85:454;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:159::-;785:5;816:6;810:13;801:22;;832:41;867:5;832:41;:::i;:::-;720:159;;;;:::o;885:367::-;963:6;1012:2;1000:9;991:7;987:23;983:32;980:119;;;1018:79;;:::i;:::-;980:119;1138:1;1163:72;1227:7;1218:6;1207:9;1203:22;1163:72;:::i;:::-;1153:82;;1109:136;885:367;;;;:::o;85:454:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sendEtherToContract_126": {
									"entryPoint": 167,
									"id": 126,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3181:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "103:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "141:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "165:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "91:11:2",
														"type": ""
													}
												],
												"src": "7:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:63:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "318:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:2"
																	},
																	{
																		"hexValue": "446f6e742073656e64206d6520657468657221",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "322:21:2",
																		"type": "",
																		"value": "Dont send me ether!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:45:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:45:2"
														}
													]
												},
												"name": "store_literal_in_memory_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "280:6:2",
														"type": ""
													}
												],
												"src": "182:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "579:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "584:2:2",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "520:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "520:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "685:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f",
																	"nodeType": "YulIdentifier",
																	"src": "596:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "596:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "714:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "705:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "705:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "698:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "491:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "499:3:2",
														"type": ""
													}
												],
												"src": "357:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "900:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "910:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "922:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "933:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "910:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "957:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "968:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "953:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "953:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "976:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "982:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "972:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "972:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "946:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "946:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "946:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1002:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1136:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1010:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1002:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "880:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "895:4:2",
														"type": ""
													}
												],
												"src": "729:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1267:34:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1277:18:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1292:3:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1277:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1239:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1244:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1255:11:2",
														"type": ""
													}
												],
												"src": "1154:147:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1413:8:2",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1405:6:2",
														"type": ""
													}
												],
												"src": "1307:114:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1590:235:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1600:90:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1688:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1607:75:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1607:83:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1788:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "1699:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1699:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1801:18:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1812:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1817:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1808:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:11:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1801:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1578:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1586:3:2",
														"type": ""
													}
												],
												"src": "1427:398:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:191:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2030:154:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2180:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2037:141:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:147:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2030:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2194:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2201:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2194:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2006:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2015:3:2",
														"type": ""
													}
												],
												"src": "1831:379:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2322:59:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2344:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2352:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2340:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2340:14:2"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2356:17:2",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2333:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2333:41:2"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2314:6:2",
														"type": ""
													}
												],
												"src": "2216:165:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2533:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2543:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2609:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2614:2:2",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2550:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2550:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2543:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2715:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nodeType": "YulIdentifier",
																	"src": "2626:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2626:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2626:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2728:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2739:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2744:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2735:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2735:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2728:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2521:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2529:3:2",
														"type": ""
													}
												],
												"src": "2387:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2930:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2940:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2952:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2963:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2948:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2940:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2987:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2998:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2983:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2983:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3006:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3012:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3002:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3002:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2976:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2976:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3032:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3166:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3040:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3032:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2910:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2925:4:2",
														"type": ""
													}
												],
												"src": "2759:419:2"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dont send me ether!\")\n\n    }\n\n    function abi_encode_t_stringliteral_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100225760003560e01c8063325ec7681461009d57610062565b36610062576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610059906101d4565b60405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610094906101d4565b60405180910390fd5b6100a56100a7565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16346040516100ee90610225565b60006040518083038185875af1925050503d806000811461012b576040519150601f19603f3d011682016040523d82523d6000602084013e610130565b606091505b5050905080610174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016b90610286565b60405180910390fd5b50565b600082825260208201905092915050565b7f446f6e742073656e64206d652065746865722100000000000000000000000000600082015250565b60006101be601383610177565b91506101c982610188565b602082019050919050565b600060208201905081810360008301526101ed816101b1565b9050919050565b600081905092915050565b50565b600061020f6000836101f4565b915061021a826101ff565b600082019050919050565b600061023082610202565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610270600f83610177565b915061027b8261023a565b602082019050919050565b6000602082019050818103600083015261029f81610263565b905091905056fea264697066735822122096a2a5dff648ee0e30805b9c17d940aba962b2ba9a8c49d713c2ad03d85c54e364736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x325EC768 EQ PUSH2 0x9D JUMPI PUSH2 0x62 JUMP JUMPDEST CALLDATASIZE PUSH2 0x62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59 SWAP1 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94 SWAP1 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA5 PUSH2 0xA7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xEE SWAP1 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x130 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP1 PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x446F6E742073656E64206D652065746865722100000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE PUSH1 0x13 DUP4 PUSH2 0x177 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9 DUP3 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED DUP2 PUSH2 0x1B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F PUSH1 0x0 DUP4 PUSH2 0x1F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A DUP3 PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x230 DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270 PUSH1 0xF DUP4 PUSH2 0x177 JUMP JUMPDEST SWAP2 POP PUSH2 0x27B DUP3 PUSH2 0x23A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29F DUP2 PUSH2 0x263 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 LOG2 0xA5 0xDF 0xF6 BASEFEE 0xEE 0xE ADDRESS DUP1 JUMPDEST SWAP13 OR 0xD9 BLOCKHASH 0xAB 0xA9 PUSH3 0xB2BA9A DUP13 0x49 0xD7 SGT 0xC2 0xAD SUB 0xD8 0x5C SLOAD 0xE3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "85:454:1:-:0;;;;;;;;;;;;;;;;;;;;;;;239:29;;;;;;;;;;:::i;:::-;;;;;;;;85:454;320:29;;;;;;;;;;:::i;:::-;;;;;;;;362:173;;;:::i;:::-;;;420:12;445:4;;;;;;;;;;;437:18;;462:9;437:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:57;;;494:7;486:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;408:127;362:173::o;7:169:2:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:::-;322:21;318:1;310:6;306:14;299:45;182:169;:::o;357:366::-;499:3;520:67;584:2;579:3;520:67;:::i;:::-;513:74;;596:93;685:3;596:93;:::i;:::-;714:2;709:3;705:12;698:19;;357:366;;;:::o;729:419::-;895:4;933:2;922:9;918:18;910:26;;982:9;976:4;972:20;968:1;957:9;953:17;946:47;1010:131;1136:4;1010:131;:::i;:::-;1002:139;;729:419;;;:::o;1154:147::-;1255:11;1292:3;1277:18;;1154:147;;;;:::o;1307:114::-;;:::o;1427:398::-;1586:3;1607:83;1688:1;1683:3;1607:83;:::i;:::-;1600:90;;1699:93;1788:3;1699:93;:::i;:::-;1817:1;1812:3;1808:11;1801:18;;1427:398;;;:::o;1831:379::-;2015:3;2037:147;2180:3;2037:147;:::i;:::-;2030:154;;2201:3;2194:10;;1831:379;;;:::o;2216:165::-;2356:17;2352:1;2344:6;2340:14;2333:41;2216:165;:::o;2387:366::-;2529:3;2550:67;2614:2;2609:3;2550:67;:::i;:::-;2543:74;;2626:93;2715:3;2626:93;:::i;:::-;2744:2;2739:3;2735:12;2728:19;;2387:366;;;:::o;2759:419::-;2925:4;2963:2;2952:9;2948:18;2940:26;;3012:9;3006:4;3002:20;2998:1;2987:9;2983:17;2976:47;3040:131;3166:4;3040:131;:::i;:::-;3032:139;;2759:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "146400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "384",
								"sendEtherToContract()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 85,
									"end": 539,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 85,
									"end": 539,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 85,
									"end": 539,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 127,
									"end": 196,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 196,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 127,
									"end": 196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 127,
									"end": 196,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 127,
									"end": 196,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 127,
									"end": 196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 127,
									"end": 196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 127,
									"end": 196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 183,
									"end": 188,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 175,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 175,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 171,
									"end": 189,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 171,
									"end": 189,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 171,
									"end": 189,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 171,
									"end": 189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 127,
									"end": 196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 85,
									"end": 539,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 85,
									"end": 539,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 570,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 570,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 511,
									"end": 518,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 558,
									"end": 563,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 540,
									"end": 564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 540,
									"end": 564,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 529,
									"end": 564,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 529,
									"end": 564,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 570,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 570,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 570,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 576,
									"end": 714,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 576,
									"end": 714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 657,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 683,
									"end": 688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 657,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 657,
									"end": 689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 657,
									"end": 689,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 657,
									"end": 689,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 650,
									"end": 655,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 647,
									"end": 690,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 637,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 637,
									"end": 708,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 704,
									"end": 705,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 702,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 694,
									"end": 706,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 637,
									"end": 708,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 637,
									"end": 708,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 576,
									"end": 714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 576,
									"end": 714,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 720,
									"end": 879,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 720,
									"end": 879,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 785,
									"end": 790,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 822,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 810,
									"end": 823,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 801,
									"end": 823,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 801,
									"end": 823,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 832,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 867,
									"end": 872,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 832,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 832,
									"end": 873,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 832,
									"end": 873,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 832,
									"end": 873,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 720,
									"end": 879,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 720,
									"end": 879,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 720,
									"end": 879,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 720,
									"end": 879,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 720,
									"end": 879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 963,
									"end": 969,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1012,
									"end": 1014,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 991,
									"end": 998,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1010,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1015,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1018,
									"end": 1097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1138,
									"end": 1139,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1227,
									"end": 1234,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1218,
									"end": 1224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1207,
									"end": 1216,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1203,
									"end": 1225,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1163,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1153,
									"end": 1235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1153,
									"end": 1235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1245,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 885,
									"end": 1252,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 85,
									"end": 539,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 85,
									"end": 539,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 85,
									"end": 539,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 85,
									"end": 539,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 85,
									"end": 539,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 85,
									"end": 539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 85,
									"end": 539,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 85,
									"end": 539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 85,
									"end": 539,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122096a2a5dff648ee0e30805b9c17d940aba962b2ba9a8c49d713c2ad03d85c54e364736f6c63430008120033",
									".code": [
										{
											"begin": 85,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 85,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 85,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 85,
											"end": 539,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 85,
											"end": 539,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 85,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 85,
											"end": 539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 85,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 85,
											"end": 539,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 85,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 85,
											"end": 539,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 85,
											"end": 539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 85,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "325EC768"
										},
										{
											"begin": 85,
											"end": 539,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 85,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 85,
											"end": 539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 85,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 85,
											"end": 539,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 85,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 85,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 85,
											"end": 539,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 85,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 85,
											"end": 539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 239,
											"end": 268,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 239,
											"end": 268,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 268,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 239,
											"end": 268,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 239,
											"end": 268,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 239,
											"end": 268,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 239,
											"end": 268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 239,
											"end": 268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 239,
											"end": 268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 239,
											"end": 268,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 239,
											"end": 268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 239,
											"end": 268,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 239,
											"end": 268,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 268,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 239,
											"end": 268,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 239,
											"end": 268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 85,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 85,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 349,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 320,
											"end": 349,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 349,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 320,
											"end": 349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 320,
											"end": 349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 320,
											"end": 349,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 320,
											"end": 349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 320,
											"end": 349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 320,
											"end": 349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 320,
											"end": 349,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 320,
											"end": 349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 349,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 320,
											"end": 349,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 349,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 349,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 320,
											"end": 349,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 320,
											"end": 349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 349,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 362,
											"end": 535,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 362,
											"end": 535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 362,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 362,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 362,
											"end": 535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 362,
											"end": 535,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 362,
											"end": 535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 362,
											"end": 535,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 362,
											"end": 535,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 362,
											"end": 535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 420,
											"end": 432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 449,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 449,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 449,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 449,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 445,
											"end": 449,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 445,
											"end": 449,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 437,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 437,
											"end": 455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 462,
											"end": 471,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 437,
											"end": 476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 437,
											"end": 476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 437,
											"end": 476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 501,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 486,
											"end": 520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 520,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 486,
											"end": 520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 486,
											"end": 520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 486,
											"end": 520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 486,
											"end": 520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 520,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 486,
											"end": 520,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 486,
											"end": 520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 408,
											"end": 535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 362,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 182,
											"end": 351,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 182,
											"end": 351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 322,
											"end": 343,
											"name": "PUSH",
											"source": 2,
											"value": "446F6E742073656E64206D652065746865722100000000000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 299,
											"end": 344,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 182,
											"end": 351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 182,
											"end": 351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 723,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 357,
											"end": 723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 584,
											"end": 586,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 579,
											"end": 582,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 520,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 520,
											"end": 587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 520,
											"end": 587,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 520,
											"end": 587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 513,
											"end": 587,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 513,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 596,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 596,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 596,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 596,
											"end": 689,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 596,
											"end": 689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 714,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 709,
											"end": 712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 705,
											"end": 717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 698,
											"end": 717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 357,
											"end": 723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 357,
											"end": 723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 729,
											"end": 1148,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 729,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 895,
											"end": 899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 922,
											"end": 931,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 918,
											"end": 936,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 910,
											"end": 936,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 910,
											"end": 936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 982,
											"end": 991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 976,
											"end": 980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 972,
											"end": 992,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 968,
											"end": 969,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 966,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 953,
											"end": 970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 946,
											"end": 993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1136,
											"end": 1140,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1010,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1141,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1010,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 729,
											"end": 1148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 729,
											"end": 1148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 729,
											"end": 1148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 729,
											"end": 1148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1154,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1301,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1301,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1421,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1307,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1825,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1427,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1607,
											"end": 1690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1690,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1607,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1600,
											"end": 1690,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1600,
											"end": 1690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1788,
											"end": 1791,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1699,
											"end": 1792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1699,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 2210,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1831,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2180,
											"end": 2183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2037,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2037,
											"end": 2184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2037,
											"end": 2184,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2037,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2201,
											"end": 2204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 2210,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 2210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 2210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 2210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2381,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2216,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2373,
											"name": "PUSH",
											"source": 2,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 2352,
											"end": 2353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2350,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2354,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2374,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2753,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2387,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2529,
											"end": 2532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2614,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 2609,
											"end": 2612,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2550,
											"end": 2617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2617,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2550,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2617,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2715,
											"end": 2718,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2626,
											"end": 2719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2719,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2626,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2739,
											"end": 2742,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2728,
											"end": 2747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2728,
											"end": 2747,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2759,
											"end": 3178,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2759,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 2929,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2965,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2952,
											"end": 2961,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2948,
											"end": 2966,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2940,
											"end": 2966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2940,
											"end": 2966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3010,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3022,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 2999,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2996,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 3000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2976,
											"end": 3023,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3166,
											"end": 3170,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3040,
											"end": 3171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3171,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3040,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2759,
											"end": 3178,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2759,
											"end": 3178,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2759,
											"end": 3178,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2759,
											"end": 3178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/King.sol",
								"contracts/KingMaker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"sendEtherToContract()": "325ec768"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_king\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"sendEtherToContract\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KingMaker.sol\":\"KingMaker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/King.sol\":{\"keccak256\":\"0x733af9f1c17a4855f071c2e939b577cc0b7f98203a47a79f3a13ec424f77b157\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://661909698876362278ea37d10d75a49dcce4323915093e4526ddf04816bed0b4\",\"dweb:/ipfs/QmNQx7RVXjVttDXRgtLjeZfQyM9VY9qWnpdnf6BvG2buCq\"]},\"contracts/KingMaker.sol\":{\"keccak256\":\"0x6b87f685d55893106ecc81be7bacc338abfefeb3a550d8aa2c71563f792373e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d246f10c915257bb0ab9b542a84cdc592446f718f964e1b10a8ece8f01778c61\",\"dweb:/ipfs/QmZvAsxgKLssY14ijyAJVfTnZSsUZsLm4FWNwZqtGvoVsg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 76,
								"contract": "contracts/KingMaker.sol:KingMaker",
								"label": "king",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(King)70"
							}
						],
						"types": {
							"t_contract(King)70": {
								"encoding": "inplace",
								"label": "contract King",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/King.sol": {
				"ast": {
					"absolutePath": "contracts/King.sol",
					"exportedSymbols": {
						"King": [
							70
						]
					},
					"id": 71,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "King",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 70,
							"linearizedBaseContracts": [
								70
							],
							"name": "King",
							"nameLocation": "66:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "king",
									"nameLocation": "84:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "76:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "76:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "e3ac5d26",
									"id": 5,
									"mutability": "mutable",
									"name": "prize",
									"nameLocation": "104:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "92:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "92:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 7,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "128:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "113:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "113:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "160:77:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "166:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "174:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "178:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "174:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "166:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "166:18:0"
											},
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "king",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "192:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 16,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "199:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "203:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "199:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "192:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "192:17:0"
											},
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "prize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "215:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 21,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "223:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "227:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "223:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "215:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "215:17:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "149:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "160:0:0"
									},
									"scope": 70,
									"src": "138:99:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "268:146:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 30,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "282:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "286:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "282:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 32,
																	"name": "prize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "295:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "282:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 34,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "304:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 35,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "308:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "304:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "318:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "304:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "282:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 29,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "274:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "274:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "274:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 46,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "353:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "357:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "353:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 43,
																	"name": "king",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "338:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "330:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 41,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "330:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "330:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "344:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "330:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "330:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "330:33:0"
											},
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 50,
														"name": "king",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "369:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 51,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "376:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "380:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "376:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "369:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "369:17:0"
											},
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 55,
														"name": "prize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "392:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 56,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "400:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "404:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "400:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "392:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "392:17:0"
											}
										]
									},
									"id": 61,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "268:0:0"
									},
									"scope": 70,
									"src": "241:173:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "465:22:0",
										"statements": [
											{
												"expression": {
													"id": 66,
													"name": "king",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "478:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 65,
												"id": 67,
												"nodeType": "Return",
												"src": "471:11:0"
											}
										]
									},
									"functionSelector": "29cc6d6f",
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_king",
									"nameLocation": "427:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:2:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "456:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:9:0"
									},
									"scope": 70,
									"src": "418:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 71,
							"src": "57:432:0",
							"usedErrors": []
						}
					],
					"src": "32:457:0"
				},
				"id": 0
			},
			"contracts/KingMaker.sol": {
				"ast": {
					"absolutePath": "contracts/KingMaker.sol",
					"exportedSymbols": {
						"King": [
							70
						],
						"KingMaker": [
							127
						]
					},
					"id": 128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 72,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "contracts/King.sol",
							"file": "contracts/King.sol",
							"id": 73,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 128,
							"sourceUnit": 71,
							"src": "56:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "KingMaker",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 127,
							"linearizedBaseContracts": [
								127
							],
							"name": "KingMaker",
							"nameLocation": "94:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 76,
									"mutability": "mutable",
									"name": "king",
									"nameLocation": "116:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 127,
									"src": "111:9:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_King_$70",
										"typeString": "contract King"
									},
									"typeName": {
										"id": 75,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 74,
											"name": "King",
											"nameLocations": [
												"111:4:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 70,
											"src": "111:4:1"
										},
										"referencedDeclaration": 70,
										"src": "111:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_King_$70",
											"typeString": "contract King"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "161:35:1",
										"statements": [
											{
												"expression": {
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 81,
														"name": "king",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "171:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_King_$70",
															"typeString": "contract King"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 83,
																"name": "_king",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "183:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 82,
															"name": "King",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "178:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_King_$70_$",
																"typeString": "type(contract King)"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "178:11:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_King_$70",
															"typeString": "contract King"
														}
													},
													"src": "171:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_King_$70",
														"typeString": "contract King"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "171:18:1"
											}
										]
									},
									"id": 88,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "_king",
												"nameLocation": "155:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "139:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:23:1"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "161:0:1"
									},
									"scope": 127,
									"src": "127:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "228:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "446f6e742073656e64206d6520657468657221",
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "246:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f",
																"typeString": "literal_string \"Dont send me ether!\""
															},
															"value": "Dont send me ether!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f",
																"typeString": "literal_string \"Dont send me ether!\""
															}
														],
														"id": 91,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "239:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "239:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "239:29:1"
											}
										]
									},
									"id": 96,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:0:1"
									},
									"scope": 127,
									"src": "202:74:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "310:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "446f6e742073656e64206d6520657468657221",
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "327:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f",
																"typeString": "literal_string \"Dont send me ether!\""
															},
															"value": "Dont send me ether!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_48d502bfcd17500ea3e9075d4888a03a4e98665d62bc0b7906f305973473af0f",
																"typeString": "literal_string \"Dont send me ether!\""
															}
														],
														"id": 99,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "320:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "320:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "320:29:1"
											}
										]
									},
									"id": 104,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "310:0:1"
									},
									"scope": 127,
									"src": "282:74:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "408:127:1",
										"statements": [
											{
												"assignments": [
													108,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 108,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "425:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 125,
														"src": "420:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 107,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "420:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 119,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "473:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 111,
																		"name": "king",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 76,
																		"src": "445:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_King_$70",
																			"typeString": "contract King"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_King_$70",
																			"typeString": "contract King"
																		}
																	],
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "437:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 109,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "437:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "437:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "451:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "437:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 114,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "462:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "466:5:1",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "462:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "437:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "437:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "419:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 121,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "494:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "502:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "486:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "486:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "486:34:1"
											}
										]
									},
									"functionSelector": "325ec768",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendEtherToContract",
									"nameLocation": "371:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:0:1"
									},
									"scope": 127,
									"src": "362:173:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 128,
							"src": "85:454:1",
							"usedErrors": []
						}
					],
					"src": "32:507:1"
				},
				"id": 1
			}
		}
	}
}